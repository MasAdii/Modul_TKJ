[
    {
        "id": 1,
        "title": "Dasar-Dasar Komputer",
        "desc": "Pengenalan komponen hardware (CPU, RAM, Storage), software (OS, Aplikasi), dan brainware.",
        "kategori": "hardware",
        "tahun": 2024,
        "image": "https://images.pexels.com/photos/1779487/pexels-photo-1779487.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
        "content": "<p>Memahami dasar-dasar komputer adalah fondasi utama dalam dunia TKJ. Komputer secara garis besar terdiri dari tiga komponen utama yang saling bekerja sama: Hardware, Software, dan Brainware.</p><h2>1. Hardware (Perangkat Keras)</h2><p>Ini adalah komponen fisik dari komputer yang dapat kita lihat dan sentuh. Komponen paling vital meliputi:</p><ul><li><strong>CPU (Central Processing Unit):</strong> Sering disebut sebagai \"otak\" komputer. CPU bertanggung jawab untuk mengeksekusi instruksi dan memproses data. Contoh: Intel Core i5, AMD Ryzen 7.</li><li><strong>RAM (Random Access Memory):</strong> Memori sementara yang digunakan untuk menyimpan data yang sedang aktif digunakan oleh aplikasi. Semakin besar RAM, semakin banyak aplikasi yang bisa berjalan lancar secara bersamaan. Sifatnya <em>volatile</em>, artinya data akan hilang saat komputer mati.</li><li><strong>Storage (Penyimpanan):</strong> Tempat menyimpan data secara permanen. Ada dua jenis utama: HDD (Hard Disk Drive) yang menggunakan piringan magnetik, dan SSD (Solid State Drive) yang jauh lebih cepat karena menggunakan chip memori.</li><li><strong>Motherboard:</strong> Papan sirkuit utama yang menghubungkan semua komponen hardware.</li><li><strong>GPU (Graphics Processing Unit):</strong> Bertugas untuk memproses dan merender grafis ke monitor. Sangat penting untuk gaming dan desain grafis.</li><li><strong>Input/Output Devices:</strong> Keyboard, mouse, monitor, printer, dll.</li></ul><h2>2. Software (Perangkat Lunak)</h2><p>Ini adalah sekumpulan instruksi atau program yang memberitahu hardware apa yang harus dilakukan. Dibagi menjadi dua kategori utama:</p><ol><li><strong>Sistem Operasi (Operating System - OS):</strong> Perangkat lunak paling dasar yang mengelola semua sumber daya hardware dan software. Contoh: Windows, macOS, Linux (Ubuntu, Debian), Android.</li><li><strong>Aplikasi (Application Software):</strong> Program yang dirancang untuk melakukan tugas spesifik untuk pengguna. Contoh: Microsoft Office (Word, Excel), Google Chrome, Adobe Photoshop, game, dll.</li></ol><h2>3. Brainware (Pengguna)</h2><p>Merujuk pada manusia yang mengoperasikan atau menggunakan komputer. Tanpa brainware, hardware dan software tidak akan berfungsi. Brainware bisa berupa programmer, operator, system analyst, atau pengguna biasa.</p>",
        "references": [
            { "name": "Wikipedia - Computer Hardware", "url": "https://en.wikipedia.org/wiki/Computer_hardware" },
            { "name": "GeeksforGeeks - Software and its Types", "url": "https://www.geeksforgeeks.org/software-and-its-types/" }
        ]
    },
    {
        "id": 2,
        "title": "Jaringan Dasar (OSI, Topologi)",
        "desc": "Memahami konsep dasar jaringan, 7 OSI layer, TCP/IP, dan berbagai macam topologi fisik.",
        "kategori": "jaringan",
        "tahun": 2024,
        "image": "https://images.pexels.com/photos/5926382/pexels-photo-5926382.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
        "content": "<p>Jaringan komputer adalah dua atau lebih komputer yang terhubung untuk berbagi sumber daya (seperti file atau printer) dan berkomunikasi. Konsep dasarnya diatur oleh model referensi dan topologi.</p><h2>1. Model OSI Layer</h2><p>Model Open Systems Interconnection (OSI) adalah kerangka konseptual yang membagi fungsi komunikasi jaringan menjadi tujuh lapisan. Ini membantu standardisasi dan troubleshooting.</p><ol reversed><li><strong>Layer 7 (Application):</strong> Lapisan terdekat dengan pengguna. Menyediakan antarmuka bagi aplikasi untuk mengakses layanan jaringan. Contoh protokol: HTTP, FTP, SMTP, DNS.</li><li><strong>Layer 6 (Presentation):</strong> Bertanggung jawab untuk translasi data, enkripsi, dan kompresi. Memastikan data dari layer aplikasi dapat dibaca oleh layer aplikasi di sistem lain.</li><li><strong>Layer 5 (Session):</strong> Mengelola, dan mengakhiri sesi (koneksi) antar aplikasi.</li><li><strong>Layer 4 (Transport):</strong> Bertanggung jawab untuk komunikasi end-to-end. Memecah data menjadi segmen dan menyediakan kontrol aliran dan keandalan. Contoh protokol: TCP (andal) dan UDP (cepat).</li><li><strong>Layer 3 (Network):</strong> Mengelola pengalamatan logis (IP Address) dan menentukan rute terbaik untuk pengiriman paket data dari sumber ke tujuan. Perangkat utamanya adalah <strong>Router</strong>.</li><li><strong>Layer 2 (Data Link):</strong> Mengelola pengalamatan fisik (MAC Address) dan mengontrol akses ke media fisik. Memformat data menjadi frame. Perangkat utamanya adalah <strong>Switch</strong>.</li><li><strong>Layer 1 (Physical):</strong> Bertanggung jawab untuk transmisi bit mentah melalui media fisik (kabel, sinyal radio). Perangkat utamanya adalah <strong>Hub</strong> dan kabel.</li></ol><h2>2. Topologi Jaringan</h2><p>Topologi menggambarkan tata letak fisik atau logis dari sebuah jaringan.</p><ul><li><strong>Topologi Bus:</strong> Semua perangkat terhubung ke satu kabel pusat (backbone). Sudah jarang digunakan.</li><li><strong>Topologi Ring:</strong> Perangkat terhubung dalam satu lingkaran tertutup. Data mengalir dalam satu arah.</li><li><strong>Topologi Star:</strong> Semua perangkat terhubung ke satu titik pusat seperti Hub atau Switch. Ini adalah topologi yang paling umum digunakan saat ini karena mudah dikelola dan di-troubleshoot.</li><li><strong>Topologi Mesh:</strong> Setiap perangkat terhubung ke setiap perangkat lainnya. Sangat andal tetapi mahal dan kompleks.</li><li><strong>Topologi Hybrid:</strong> Kombinasi dari dua atau lebih topologi yang berbeda.</li></ul>",
        "references": [
            { "name": "Wikipedia - Model OSI", "url": "https://id.wikipedia.org/wiki/Model_OSI" },
            { "name": "Kompas - Topologi", "url": "https://tekno.kompas.com/read/2022/08/16/14150077/6-jenis-topologi-jaringan-komputer-serta-pengertian-kelebihan-dan-kekurangannya?page=all" }
        ]
    },
    {
        "id": 3,
        "title": "Konfigurasi IP Statik & DHCP",
        "desc": "Cara setting alamat IP manual (statik) dan otomatis (DHCP) pada perangkat Windows dan Linux.",
        "kategori": "jaringan",
        "tahun": 2024,
        "image": "https://images.pexels.com/photos/270669/pexels-photo-270669.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
        "content": "<p>Setiap perangkat dalam jaringan TCP/IP memerlukan alamat IP unik untuk berkomunikasi. Alamat ini dapat diatur secara manual (Statik) atau diperoleh secara otomatis (DHCP).</p><h2>1. IP Address Statik</h2><p>IP Statik adalah alamat IP yang dikonfigurasi secara manual pada sebuah perangkat dan tidak akan pernah berubah kecuali diubah kembali secara manual. Ini biasanya digunakan untuk server, printer jaringan, atau router yang alamatnya harus selalu diketahui dan tidak berubah.</p><h3>Kelebihan:</h3><ul><li><strong>Andal:</strong> Alamat yang stabil dan dapat diandalkan untuk hosting layanan.</li><li><strong>Mudah Diketahui:</strong> Administrator selalu tahu alamat IP perangkat tertentu.</li></ul><h3>Kekurangan:</h3><ul><li><strong>Manajemen Sulit:</strong> Membutuhkan pencatatan manual untuk menghindari konflik IP.</li><li><strong>Tidak efisien</strong> untuk jaringan besar dengan banyak klien.</li></ul><h2>2. DHCP (Dynamic Host Configuration Protocol)</h2><p>DHCP adalah protokol yang secara otomatis memberikan alamat IP dan informasi konfigurasi lainnya (seperti Subnet Mask, Gateway, dan DNS Server) ke perangkat klien dalam jaringan. Ini sangat menyederhanakan administrasi jaringan.</p><h3>Cara Kerja DHCP (DORA):</h3><ol><li><strong>Discover:</strong> Klien baru terhubung ke jaringan dan mengirimkan pesan broadcast untuk mencari DHCP server.</li><li><strong>Offer:</strong> DHCP server yang menerima pesan tersebut merespons dengan tawaran alamat IP.</li><li><strong>Request:</strong> Klien menerima tawaran tersebut dan mengirimkan permintaan resmi untuk menggunakan alamat IP tersebut.</li><li><strong>Acknowledge (ACK):</strong> Server mengkonfirmasi permintaan dan menyelesaikan proses, memberikan \"sewa\" (lease) alamat IP untuk jangka waktu tertentu.</li></ol><h2>Praktik: Cek Konfigurasi IP</h2><p>Anda dapat memeriksa konfigurasi IP di perangkat Anda dengan perintah berikut:</p><h3>Di Windows (Command Prompt):</h3><pre><code>ipconfig /all</code></pre><h3>Di Linux (Terminal):</h3><pre><code>ip addr show</code></pre><p>Perhatikan baris \"DHCP Enabled\". Jika \"Yes\", maka perangkat Anda menggunakan DHCP.</p>",
        "references": [
            { "name": "Wikipedia - DHCP", "url": "https://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol" },
            { "name": "Microsoft - DHCP Overview", "url": "https://learn.microsoft.com/en-us/windows-server/networking/technologies/dhcp/dhcp-top" }
        ]
    },
    {
        "id": 4,
        "title": "Dasar Cisco & Mikrotik",
        "desc": "Pengenalan command line Cisco IOS dan antarmuka RouterOS Mikrotik (WinBox/WebFig).",
        "kategori": "jaringan",
        "tahun": 2025,
        "image": "https://images.pexels.com/photos/5380649/pexels-photo-5380649.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
        "content": "<p>Cisco dan Mikrotik adalah dua vendor perangkat jaringan paling populer di dunia. Meskipun tujuannya sama, cara konfigurasinya berbeda.</p><h2>1. Cisco IOS (Internetwork Operating System)</h2><p>Cisco terkenal dengan perangkat kelas enterprise dan konfigurasinya yang berbasis Command Line Interface (CLI). Ini adalah skill fundamental bagi seorang network engineer.</p><h3>Mode Dasar pada CLI Cisco:</h3><ul><li><strong>User EXEC Mode:</strong> Ditandai dengan <code>Router></code>. Mode paling dasar, hanya bisa melihat informasi terbatas.</li><li><strong>Privileged EXEC Mode:</strong> Masuk dengan perintah <code>enable</code>. Ditandai dengan <code>Router#</code>. Bisa melihat semua konfigurasi dan melakukan restart.</li><li><strong>Global Configuration Mode:</strong> Masuk dengan <code>configure terminal</code> dari mode privileged. Ditandai dengan <code>Router(config)#</code>. Di sinilah konfigurasi global perangkat dilakukan.</li><li><strong>Interface Configuration Mode:</strong> Masuk dengan <code>interface [nama_interface]</code> dari mode global. Ditandai <code>Router(config-if)#</code>. Untuk konfigurasi spesifik pada port/interface.</li></ul><h3>Contoh Konfigurasi IP Address di Cisco:</h3><pre><code>Router> enable\nRouter# configure terminal\nRouter(config)# interface GigabitEthernet0/0\nRouter(config-if)# ip address 192.168.1.1 255.255.255.0\nRouter(config-if)# no shutdown\nRouter(config-if)# exit</code></pre><h2>2. Mikrotik RouterOS</h2><p>Mikrotik populer di kalangan penyedia layanan internet (ISP) kecil hingga menengah dan untuk jaringan SOHO (Small Office/Home Office). Konfigurasinya bisa melalui CLI yang mirip Cisco, namun lebih sering menggunakan antarmuka grafis (GUI).</p><h3>Alat Konfigurasi Mikrotik:</h3><ul><li><strong>WinBox:</strong> Aplikasi Windows yang menyediakan antarmuka GUI lengkap untuk semua fitur RouterOS. Cara paling populer untuk mengkonfigurasi Mikrotik.</li><li><strong>WebFig:</strong> Antarmuka berbasis web yang bisa diakses dari browser. Fiturnya hampir sama dengan WinBox.</li><li><strong>CLI:</strong> Bisa diakses via terminal (SSH/Telnet) dan memiliki struktur menu yang logis.</li></ul><p>Konfigurasi di Mikrotik biasanya dilakukan dengan membuka menu yang sesuai di WinBox/WebFig (misalnya, IP > Addresses) dan mengisi kolom yang tersedia, membuatnya lebih intuitif bagi pemula.</p>",
        "references": [
            { "name": "Cisco - Basic Router Configuration", "url": "https://www.cisco.com/c/en/us/td/docs/routers/access/800M/software/800MSCG/routconf.html" },
            { "name": "MikroTik Wiki", "url": "https://wiki.mikrotik.com/" }
        ]
    },
    {
        "id": 5,
        "title": "Pemrograman Dasar (HTML, CSS, JS)",
        "desc": "Membangun halaman web statis sederhana dengan tiga pilar utama pengembangan web front-end.",
        "kategori": "pemrograman",
        "tahun": 2025,
        "image": "https://images.pexels.com/photos/1181244/pexels-photo-1181244.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
        "content": "<p>Pemrograman web adalah skill penting di era digital. Tiga teknologi dasar yang wajib dikuasai adalah HTML, CSS, dan JavaScript.</p><h2>1. HTML (HyperText Markup Language)</h2><blockquote>HTML adalah kerangka atau struktur dari sebuah halaman web. Ia memberitahu browser elemen apa saja yang harus ditampilkan, seperti judul, paragraf, gambar, atau link.</blockquote><p>HTML menggunakan \"tag\" untuk mendefinisikan elemen. Contohnya, <code><p></code> untuk paragraf, <code><h1></code> untuk judul utama, dan <code><img></code> untuk gambar.</p><pre><code><!DOCTYPE html>\n<html>\n<head>\n    <title>Judul Halaman</title>\n</head>\n<body>\n    <h1>Ini adalah Judul</h1>\n    <p>Ini adalah sebuah paragraf.</p>\n</body>\n</html></code></pre><h2>2. CSS (Cascading Style Sheets)</h2><blockquote>CSS digunakan untuk mendesain dan menata tampilan halaman web. Ia mengontrol warna, font, layout, dan aspek visual lainnya.</blockquote><p>CSS memisahkan antara struktur (HTML) dan presentasi. Ini membuat kode lebih rapi dan mudah dikelola.</p><pre><code>/* Ini adalah contoh kode CSS */\nbody {\n    font-family: Arial, sans-serif;\n    background-color: #f0f0f0;\n}\n\nh1 {\n    color: #333;\n    text-align: center;\n}</code></pre><h2>3. JavaScript (JS)</h2><blockquote>JavaScript membuat halaman web menjadi interaktif. Ia bisa memanipulasi HTML dan CSS, merespons aksi pengguna (seperti klik), dan berkomunikasi dengan server.</blockquote><p>Semua fitur interaktif di website ini, seperti dark mode, filter, dan kuis, dibuat menggunakan JavaScript.</p><pre><code>// Ini adalah contoh kode JavaScript\ndocument.getElementById('tombol').addEventListener('click', function() {\n    alert('Tombol telah diklik!');\n});</code></pre>",
        "references": [
            { "name": "MDN Web Docs - HTML", "url": "https://developer.mozilla.org/en-US/docs/Web/HTML" },
            { "name": "MDN Web Docs - CSS", "url": "https://developer.mozilla.org/en-US/docs/Web/CSS" },
            { "name": "MDN Web Docs - JavaScript", "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript" }
        ]
    },
    {
        "id": 6,
        "title": "Virtualisasi (VMware, VirtualBox)",
        "desc": "Instalasi dan konfigurasi mesin virtual untuk simulasi server dan berbagai sistem operasi.",
        "kategori": "software",
        "tahun": 2025,
        "image": "https://images.pexels.com/photos/5926389/pexels-photo-5926389.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
        "content": "<p>Virtualisasi adalah teknologi yang memungkinkan kita untuk membuat versi virtual dari sesuatu, seperti sistem operasi, server, atau perangkat jaringan. Dalam konteks TKJ, kita paling sering menggunakan virtualisasi untuk menjalankan beberapa sistem operasi di satu komputer fisik.</p><h2>Apa itu Hypervisor?</h2><p>Hypervisor atau Virtual Machine Monitor (VMM) adalah perangkat lunak yang membuat dan menjalankan mesin virtual (VM). Ada dua tipe utama:</p><ul><li><strong>Tipe 1 (Bare-metal):</strong> Berjalan langsung di atas hardware fisik komputer. Sangat efisien dan digunakan di lingkungan server. Contoh: VMware ESXi, Proxmox VE.</li><li><strong>Tipe 2 (Hosted):</strong> Berjalan sebagai aplikasi di atas sistem operasi yang sudah ada (seperti Windows atau macOS). Sempurna untuk belajar dan development. Contoh: VMware Workstation, Oracle VirtualBox.</li></ul><h2>Platform Populer untuk Belajar</h2><h3>1. Oracle VM VirtualBox</h3><p>VirtualBox adalah hypervisor Tipe 2 yang gratis dan open-source. Sangat populer di kalangan pelajar dan developer karena kemudahan penggunaannya.</p><h3>2. VMware Workstation Player / Pro</h3><p>VMware adalah pemimpin pasar dalam virtualisasi. VMware Workstation Player adalah versi gratis untuk penggunaan non-komersial, sementara versi Pro menawarkan fitur yang lebih canggih.</p><h2>Mengapa Virtualisasi Penting untuk TKJ?</h2><ul><li><strong>Laboratorium Aman:</strong> Kita bisa mencoba mengkonfigurasi server (misalnya Windows Server atau Linux Server), melakukan uji coba keamanan, atau bahkan mensimulasikan serangan virus di dalam VM tanpa merusak komputer utama.</li><li><strong>Belajar OS Berbeda:</strong> Anda bisa menjalankan Linux di dalam Windows, atau sebaliknya. Ini memungkinkan eksplorasi tanpa perlu dual-boot.</li><li><strong>Simulasi Jaringan:</strong> Anda bisa membuat beberapa VM dan menghubungkannya dalam jaringan virtual untuk mempraktikkan konfigurasi routing, DHCP, atau firewall.</li><li><strong>Efisiensi Sumber Daya:</strong> Menjalankan beberapa server virtual di satu mesin fisik menghemat biaya listrik dan hardware.</li></ul>",
        "references": [
            { "name": "Oracle VM VirtualBox Official Website", "url": "https://www.virtualbox.org/" },
            { "name": "VMware Workstation Player Official Website", "url": "https://www.vmware.com/products/workstation-player.html" },
            { "name": "Wikipedia - Hypervisor", "url": "https://en.wikipedia.org/wiki/Hypervisor" }
        ]
    },
    {
        "id": 7,
        "title": "Web Server & FTP Server",
        "desc": "Setup dan konfigurasi server web (Apache/Nginx) dan server transfer file (FTP).",
        "kategori": "software",
        "tahun": 2026,
        "image": "https://images.pexels.com/photos/325229/pexels-photo-325229.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
        "content": "<p>Web server dan FTP server adalah dua layanan fundamental di internet. Web server menyajikan halaman web ke browser Anda, sementara FTP server digunakan untuk mentransfer file.</p><h2>1. Web Server</h2><p>Web server adalah perangkat lunak yang menyimpan file-file website (HTML, CSS, JS, gambar) dan mengirimkannya ke browser klien yang memintanya melalui protokol HTTP/HTTPS.</p><h3>Apache vs. Nginx:</h3><ul><li><strong>Apache HTTP Server:</strong> Salah satu web server tertua dan paling banyak digunakan. Sangat fleksibel dengan sistem modulnya dan file konfigurasi <code>.htaccess</code>.</li><li><strong>Nginx (dibaca \"Engine-X\"):</strong> Lebih modern dan dikenal karena performanya yang tinggi dan penggunaan memori yang rendah. Unggul dalam menangani banyak koneksi bersamaan. Sering juga digunakan sebagai <em>reverse proxy</em>.</li></ul><h3>Instalasi Apache di Ubuntu/Debian:</h3><pre><code># Perbarui daftar paket\nsudo apt update\n\n# Instal Apache2\nsudo apt install apache2\n\n# Izinkan lalu lintas Apache melalui firewall\nsudo ufw allow 'Apache'\n\n# Cek status layanan\nsudo systemctl status apache2</code></pre><p>Setelah instalasi, Anda bisa membuka alamat IP server Anda di browser untuk melihat halaman default Apache.</p><h2>2. FTP Server (File Transfer Protocol)</h2><p>FTP adalah protokol standar untuk mentransfer file dari satu host ke host lain melalui jaringan TCP/IP. Ini berguna untuk mengunggah file website ke web server.</p><blockquote><strong>Catatan Keamanan:</strong> FTP mengirimkan data (termasuk username dan password) dalam bentuk teks biasa (plain text). Untuk keamanan, sangat disarankan menggunakan varian yang lebih aman seperti <strong>FTPS</strong> (FTP over SSL/TLS) atau <strong>SFTP</strong> (SSH File Transfer Protocol).</blockquote><h3>FTP Server Populer:</h3><ul><li><strong>vsftpd (Very Secure FTP Daemon):</strong> Pilihan default di banyak distribusi Linux karena fokus pada keamanan dan kecepatan.</li><li><strong>ProFTPD:</strong> Sangat fleksibel dan konfigurasinya mirip Apache.</li><li><strong>FileZilla Server:</strong> Pilihan populer untuk pengguna Windows, dengan antarmuka grafis yang mudah digunakan.</li></ul>",
        "references": [
            { "name": "DigitalOcean - How To Install the Apache Web Server on Ubuntu 20.04", "url": "https://www.digitalocean.com/community/tutorials/how-to-install-the-apache-web-server-on-ubuntu-20-04" },
            { "name": "Wikipedia - File Transfer Protocol", "url": "https://en.wikipedia.org/wiki/File_Transfer_Protocol" }
        ]
    },
    {
        "id": 8,
        "title": "Wireless Networking",
        "desc": "Konsep dasar jaringan nirkabel, standar Wi-Fi (802.11), dan protokol keamanan (WPA3).",
        "kategori": "jaringan",
        "tahun": 2026,
        "image": "https://images.pexels.com/photos/4031322/pexels-photo-4031322.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
        "content": "<p>Jaringan nirkabel (Wireless Network) memungkinkan perangkat untuk terhubung ke jaringan tanpa menggunakan kabel fisik. Teknologi yang paling umum untuk ini adalah Wi-Fi.</p><h2>1. Standar Wi-Fi (IEEE 802.11)</h2><p>Wi-Fi diatur oleh serangkaian standar yang dibuat oleh IEEE (Institute of Electrical and Electronics Engineers) dengan kode 802.11. Setiap generasi baru menawarkan kecepatan lebih tinggi dan fitur yang lebih baik.</p><ul><li><strong>802.11g (Wi-Fi 3):</strong> Maks. 54 Mbps, frekuensi 2.4 GHz.</li><li><strong>802.11n (Wi-Fi 4):</strong> Maks. 600 Mbps, bisa di 2.4 GHz atau 5 GHz. Memperkenalkan MIMO (Multiple-Input Multiple-Output).</li><li><strong>802.11ac (Wi-Fi 5):</strong> Maks. 6.9 Gbps, hanya di frekuensi 5 GHz. Jauh lebih cepat dan efisien.</li><li><strong>802.11ax (Wi-Fi 6/6E):</strong> Maks. 9.6 Gbps, beroperasi di 2.4, 5, dan 6 GHz (untuk 6E). Dirancang untuk lingkungan padat dengan banyak perangkat (IoT).</li></ul><h2>2. Frekuensi 2.4 GHz vs 5 GHz</h2><p>Access Point modern biasanya bersifat \"dual-band\", artinya mendukung kedua frekuensi ini.</p><ul><li><strong>2.4 GHz:</strong> Jangkauan lebih luas, lebih baik dalam menembus halangan (dinding). Namun, lebih rentan terhadap interferensi dari perangkat lain (microwave, Bluetooth) dan memiliki lebih sedikit channel.</li><li><strong>5 GHz:</strong> Kecepatan lebih tinggi, lebih sedikit interferensi. Namun, jangkauannya lebih pendek dan lebih sulit menembus halangan.</li></ul><h2>3. Keamanan Jaringan Nirkabel</h2><p>Mengamankan jaringan Wi-Fi Anda sangat penting untuk mencegah akses tidak sah. Berikut adalah evolusi protokol keamanannya:</p><ol><li><strong>WEP (Wired Equivalent Privacy):</strong> Standar pertama, <strong>sangat tidak aman</strong> dan mudah diretas. Jangan pernah digunakan.</li><li><strong>WPA (Wi-Fi Protected Access):</strong> Peningkatan dari WEP, namun masih memiliki celah keamanan.</li><li><strong>WPA2 (Wi-Fi Protected Access II):</strong> Standar industri selama bertahun-tahun. Menggunakan enkripsi AES yang kuat. Ini adalah tingkat keamanan minimum yang harus Anda gunakan saat ini.</li><li><strong>WPA3 (Wi-Fi Protected Access III):</strong> Versi terbaru dan paling aman. Menawarkan perlindungan yang lebih baik terhadap serangan brute-force dan enkripsi yang lebih kuat, bahkan di jaringan Wi-Fi publik.</li></ol><p>Selalu gunakan WPA3 jika perangkat Anda mendukungnya, atau WPA2-AES sebagai alternatif.</p>",
        "references": [
            { "name": "Wi-Fi Alliance", "url": "https://www.wi-fi.org/" },
            { "name": "Intel - Understanding Wi-Fi Standards", "url": "http://intel.com/content/www/us/en/support/articles/000005725/wireless/legacy-intel-wireless-products.html" }
        ]
    },
    {
        "id": 9,
        "title": "Troubleshooting Jaringan",
        "desc": "Metodologi dan tool dasar untuk menemukan dan memperbaiki masalah koneksi jaringan.",
        "kategori": "jaringan",
        "tahun": 2026,
        "image": "https://images.pexels.com/photos/373543/pexels-photo-373543.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
        "content": "<p>Troubleshooting adalah seni memecahkan masalah. Dalam jaringan, ini adalah skill paling penting. Pendekatan yang sistematis akan menghemat banyak waktu.</p><h2>1. Metodologi Bottom-Up (Model OSI)</h2><p>Ini adalah pendekatan paling logis untuk masalah konektivitas. Mulai dari lapisan paling bawah (Fisik) dan naik ke atas.</p><ol><li><strong>Layer 1 (Fisik):</strong> Apakah kabel terpasang dengan benar? Apakah lampu indikator di port LAN menyala? Apakah access point menyala?</li><li><strong>Layer 2 (Data Link):</strong> Apakah switch berfungsi? Apakah komputer mendapatkan MAC Address?</li><li><strong>Layer 3 (Network):</strong> Apakah komputer mendapatkan alamat IP yang benar? Apakah konfigurasi subnet mask dan gateway sudah sesuai? Bisakah Anda <code>ping</code> gateway?</li><li><strong>Layer 4 (Transport):</strong> Apakah firewall memblokir port yang dibutuhkan?</li><li><strong>Layer 7 (Aplikasi):</strong> Apakah konfigurasi DNS sudah benar? Bisakah Anda <code>ping</code> nama domain seperti <code>google.com</code>? Apakah ada masalah dengan aplikasi itu sendiri (misal: browser, proxy)?</li></ol><h2>2. Perintah (Tools) Dasar di Command Line</h2><p>Ini adalah senjata utama seorang teknisi jaringan. Semua tersedia di Windows, macOS, dan Linux.</p><h3><code>ping</code></h3><p>Mengirim paket ICMP Echo Request untuk menguji apakah sebuah host (alamat IP atau domain) aktif dan dapat dijangkau. Ini adalah langkah pertama untuk memeriksa konektivitas dasar.</p><pre><code>ping 192.168.1.1  (Ping ke gateway)\nping 8.8.8.8      (Ping ke DNS Google, menguji koneksi internet)\nping google.com   (Menguji koneksi internet dan DNS)</code></pre><h3><code>ipconfig</code> (Windows) / <code>ifconfig</code> atau <code>ip addr</code> (Linux/macOS)</h3><p>Menampilkan semua konfigurasi antarmuka jaringan di komputer Anda, termasuk alamat IP, subnet mask, dan default gateway.</p><pre><code>ipconfig /all (Menampilkan info detail di Windows)</code></pre><h3><code>tracert</code> (Windows) / <code>traceroute</code> (Linux/macOS)</h3><p>Melacak rute (lompatan/hop) yang dilewati paket dari komputer Anda ke tujuan. Sangat berguna untuk mengidentifikasi di mana letak masalah koneksi (misalnya, berhenti di router Anda, di ISP, atau lebih jauh).</p><pre><code>tracert google.com</code></pre><h3><code>nslookup</code></h3><p>Digunakan untuk melakukan query ke server DNS untuk mengetahui alamat IP yang terkait dengan sebuah nama domain, atau sebaliknya.</p><pre><code>nslookup tkj.learning.hub</code></pre>",
        "references": [
            { "name": "Microsoft Docs - Troubleshooting TCP/IP", "url": "https://learn.microsoft.com/en-us/troubleshoot/windows-server/networking/troubleshoot-tcp-ip-communication-guidance" }
        ]
    },
    {
        "id": 10,
        "title": "Keamanan Jaringan Dasar",
        "desc": "Pengenalan konsep Firewall, VPN, dan praktik terbaik untuk mengamankan jaringan.",
        "kategori": "keamanan",
        "tahun": 2026,
        "image": "https://images.pexels.com/photos/60504/security-protection-anti-virus-software-60504.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
        "content": "<p>Keamanan jaringan adalah praktik untuk mencegah dan melindungi dari akses yang tidak sah ke dalam atau antar jaringan komputer. Ini adalah aspek kritis dalam administrasi jaringan.</p><h2>1. Firewall</h2><p>Firewall adalah sistem keamanan jaringan yang memonitor dan mengontrol lalu lintas jaringan yang masuk dan keluar berdasarkan aturan keamanan yang telah ditentukan. Firewall bertindak sebagai penghalang antara jaringan internal yang aman dan tepercaya dengan jaringan eksternal yang tidak tepercaya (seperti Internet).</p><h3>Cara Kerja Firewall:</h3><ul><li><strong>Packet Filtering:</strong> Memeriksa header setiap paket (seperti IP sumber/tujuan, port) dan memutuskan apakah akan mengizinkan atau memblokirnya.</li><li><strong>Stateful Inspection:</strong> Melacak status koneksi aktif dan membuat keputusan berdasarkan konteks lalu lintas.</li><li><strong>Proxy Service:</strong> Bertindak sebagai perantara antara klien internal dan server eksternal, menyembunyikan identitas klien.</li></ul><h2>2. VPN (Virtual Private Network)</h2><p>VPN menciptakan koneksi yang aman dan terenkripsi melalui jaringan publik seperti Internet. Ini seolah-olah membuat \"terowongan\" pribadi untuk lalu lintas data Anda, melindunginya dari penyadapan.</p><h3>Kegunaan VPN:</h3><ul><li><strong>Akses Jarak Jauh (Remote Access):</strong> Memungkinkan karyawan bekerja dari rumah untuk mengakses jaringan kantor dengan aman.</li><li><strong>Menghubungkan Kantor Cabang (Site-to-Site):</strong> Menghubungkan jaringan di dua atau lebih lokasi secara aman melalui internet.</li><li><strong>Keamanan & Privasi:</strong> Mengenkripsi aktivitas internet Anda saat menggunakan Wi-Fi publik.</li></ul><h2>3. Praktik Terbaik Keamanan Dasar (Best Practices)</h2><ol><li><strong>Gunakan Kata Sandi yang Kuat:</strong> Kombinasikan huruf besar, huruf kecil, angka, dan simbol. Ganti kata sandi default pada semua perangkat jaringan.</li><li><strong>Selalu Update Perangkat Lunak:</strong> Pastikan sistem operasi dan firmware router/switch selalu dalam versi terbaru untuk menambal celah keamanan.</li><li><strong>Nonaktifkan Fitur yang Tidak Perlu:</strong> Matikan layanan dan port yang tidak digunakan pada router Anda untuk mengurangi permukaan serangan. Contoh: Telnet, UPnP.</li><li><strong>Gunakan Enkripsi Wi-Fi yang Kuat:</strong> Selalu gunakan WPA2 atau WPA3 untuk jaringan nirkabel Anda. Hindari WEP dan WPA.</li><li><strong>Segmentasi Jaringan:</strong> Pisahkan jaringan untuk tamu (Guest Network) dari jaringan internal utama.</li></ol>",
        "references": [
            { "name": "Palo Alto Networks - What is a Firewall?", "url": "https://www.paloaltonetworks.com/cyberpedia/what-is-a-firewall" },
            { "name": "Cisco - What is a VPN?", "url": "https://www.cisco.com/site/us/en/learn/topics/security/what-is-a-virtual-private-network-vpn.html" }
        ]
    },
    {
        "id": 11,
        "title": "Subnetting IPv4",
        "desc": "Teknik memecah jaringan besar menjadi sub-jaringan yang lebih kecil untuk efisiensi dan keamanan.",
        "kategori": "jaringan",
        "tahun": 2024,
        "image": "https://images.pexels.com/photos/531880/pexels-photo-531880.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
        "content": "<p>Subnetting adalah proses membagi sebuah jaringan IP yang besar menjadi beberapa sub-jaringan (subnet) yang lebih kecil. Ini adalah skill fundamental dalam administrasi jaringan untuk efisiensi alokasi alamat IP dan peningkatan keamanan.</p><h2>Mengapa Perlu Subnetting?</h2><ul><li><strong>Efisiensi Alamat IP:</strong> Mengurangi pemborosan alamat IP dalam setiap jaringan.</li><li><strong>Peningkatan Kinerja:</strong> Mengurangi lalu lintas broadcast, karena broadcast hanya tersebar di dalam satu subnet, tidak ke seluruh jaringan besar.</li><li><strong>Peningkatan Keamanan:</strong> Memudahkan penerapan kebijakan keamanan (misalnya dengan firewall) antara satu subnet dengan subnet lainnya. Anda bisa mengisolasi departemen atau server penting.</li></ul><h2>Konsep Kunci: Subnet Mask</h2><p>Subnet mask adalah angka 32-bit yang digunakan untuk membedakan antara Network ID dan Host ID dalam sebuah alamat IP. Notasi yang umum digunakan adalah CIDR (Classless Inter-Domain Routing), seperti <code>/24</code>.</p><ul><li>Bit '1' pada subnet mask merepresentasikan bagian Network.</li><li>Bit '0' pada subnet mask merepresentasikan bagian Host.</li></ul><h2>Studi Kasus: Subnetting Jaringan Kelas C</h2><p>Misalkan kita memiliki alamat jaringan <strong>192.168.1.0/24</strong>. Mari kita pecah menjadi 4 subnet yang lebih kecil.</p><ul><li><strong>Network Awal:</strong> 192.168.1.0</li><li><strong>Subnet Mask Awal:</strong> 255.255.255.0 (atau /24)</li></ul><p>Untuk membuat 4 subnet, kita perlu \"meminjam\" bit dari bagian host. Karena 2<sup>2</sup> = 4, kita perlu meminjam <strong>2 bit</strong>.</p><p>Subnet mask baru kita akan menjadi /26 (karena 24 + 2 = 26). Dalam bentuk desimal, ini adalah <strong>255.255.255.192</strong>.</p><p>Setiap subnet akan memiliki 2<sup>(32-26)</sup> = 2<sup>6</sup> = 64 alamat. Alamat pertama adalah Network Address dan alamat terakhir adalah Broadcast Address. Jadi, ada 62 alamat host yang bisa digunakan per subnet.</p><h3>Hasil Subnetting:</h3><ol><li><strong>Subnet 1:</strong><ul><li>Network: 192.168.1.0</li><li>Range Host: 192.168.1.1 - 192.168.1.62</li><li>Broadcast: 192.168.1.63</li></ul></li><li><strong>Subnet 2:</strong><ul><li>Network: 192.168.1.64</li><li>Range Host: 192.168.1.65 - 192.168.1.126</li><li>Broadcast: 192.168.1.127</li></ul></li><li><strong>Subnet 3:</strong><ul><li>Network: 192.168.1.128</li><li>Range Host: 192.168.1.129 - 192.168.1.190</li><li>Broadcast: 192.168.1.191</li></ul></li><li><strong>Subnet 4:</strong><ul><li>Network: 192.168.1.192</li><li>Range Host: 192.168.1.193 - 192.168.1.254</li><li>Broadcast: 192.168.1.255</li></ul></li></ol>",
        "references": [
            { "name": "geeksforgeeks - What is Subnetting?", "url": "https://www.geeksforgeeks.org/computer-networks/introduction-to-subnetting/" },
            { "name": "Subnet Calculator", "url": "https://www.calculator.net/ip-subnet-calculator.html" }
        ]
    },
    {
        "id": 12,
        "title": "Kabel Jaringan (Crimping & Standar)",
        "desc": "Keterampilan praktis membuat kabel UTP dengan standar T568A dan T568B untuk Straight & Cross.",
        "kategori": "hardware",
        "tahun": 2024,
        "image": "https://images.pexels.com/photos/4317157/pexels-photo-4317157.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
        "content": "<p>Membuat kabel jaringan sendiri (crimping) adalah salah satu keterampilan paling dasar dan penting bagi seorang teknisi TKJ. Kabel yang paling umum digunakan adalah UTP (Unshielded Twisted Pair).</p><h2>Peralatan yang Dibutuhkan:</h2><ul><li>Kabel UTP (Cat5e atau Cat6)</li><li>Konektor RJ-45</li><li>Crimping Tool</li><li>LAN Tester</li><li>Gunting / Wire Stripper (biasanya sudah ada di crimping tool)</li></ul><h2>Standar Urutan Warna T568A dan T568B</h2><p>Ada dua standar internasional untuk urutan 8 kabel kecil di dalam kabel UTP. Konsistensi adalah kunci.</p><h3>Standar T568B (Paling Umum Digunakan):</h3><ol><li>Putih-Oranye</li><li>Oranye</li><li>Putih-Hijau</li><li>Biru</li><li>Putih-Biru</li><li>Hijau</li><li>Putih-Coklat</li><li>Coklat</li></ol><h3>Standar T568A:</h3><ol><li>Putih-Hijau</li><li>Hijau</li><li>Putih-Oranye</li><li>Biru</li><li>Putih-Biru</li><li>Oranye</li><li>Putih-Coklat</li><li>Coklat</li></ol><p>Perhatikan bahwa hanya pasangan Oranye dan Hijau yang bertukar posisi antara kedua standar.</p><h2>Jenis-Jenis Kabel</h2><h3>1. Kabel Straight-Through (Lurus)</h3><p>Jenis kabel ini memiliki urutan warna yang SAMA di kedua ujungnya (misalnya, Ujung A menggunakan T568B dan Ujung B juga menggunakan T568B). Ini adalah kabel yang paling sering Anda gunakan.</p><blockquote><strong>Kegunaan:</strong> Menghubungkan perangkat yang berbeda jenis. Contoh: Komputer ke Switch, Router ke Switch.</blockquote><h3>2. Kabel Cross-Over (Silang)</h3><p>Jenis kabel ini memiliki urutan warna yang BERBEDA di kedua ujungnya (misalnya, Ujung A menggunakan T568B dan Ujung B menggunakan T568A).</p><blockquote><strong>Kegunaan:</strong> Menghubungkan perangkat yang sejenis. Contoh: Komputer ke Komputer, Switch ke Switch.</blockquote><p><strong>Catatan:</strong> Perangkat jaringan modern seringkali sudah dilengkapi fitur Auto MDI-X, yang bisa mendeteksi jenis kabel secara otomatis. Namun, memahami perbedaan Straight dan Cross tetap merupakan pengetahuan fundamental.</p><h2>Langkah-langkah Crimping:</h2><ol><li>Kupas kulit luar kabel UTP sekitar 2-3 cm.</li><li>Pisahkan dan luruskan 8 kabel kecil di dalamnya.</li><li>Urutkan kabel sesuai standar yang diinginkan (misal, T568B).</li><li>Ratakan ujung kabel dan potong agar sama panjang.</li><li>Masukkan kabel ke dalam konektor RJ-45 dengan hati-hati. Pastikan setiap kabel masuk ke pin yang benar dan ujungnya menyentuh bagian depan konektor.</li><li>Masukkan konektor ke dalam lubang crimping tool yang sesuai, lalu tekan dengan kuat.</li><li>Ulangi untuk ujung kabel yang satunya.</li><li>Gunakan LAN Tester untuk memastikan semua 8 pin terhubung dengan benar.</li></ol>",
        "references": [
            { "name": "Flukenetworks - T568A vs. T568B", "url": "https://www.flukenetworks.com/knowledge-base/application-or-standards-articles-copper/differences-between-wiring-codes-t568a-vs" }
        ]
    },
    {
        "id": 13,
        "title": "Dasar-Dasar Linux",
        "desc": "Pengenalan sistem operasi Linux, struktur direktori, dan perintah-perintah dasar di terminal.",
        "kategori": "software",
        "tahun": 2025,
        "image": "https://images.pexels.com/photos/2582937/pexels-photo-2582937.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
        "content": "<p>Linux adalah keluarga sistem operasi open-source yang sangat dominan di dunia server, superkomputer, dan perangkat embedded. Menguasai command line (terminal) Linux adalah skill wajib bagi administrator jaringan dan sistem.</p><h2>Mengapa Linux Penting?</h2><ul><li><strong>Gratis dan Open Source:</strong> Tidak perlu biaya lisensi dan kodenya bisa dipelajari atau dimodifikasi.</li><li><strong>Stabil dan Andal:</strong> Terkenal karena kemampuannya berjalan berbulan-bulan bahkan bertahun-tahun tanpa perlu reboot.</li><li><strong>Aman:</strong> Arsitektur hak akses (permission) membuatnya lebih tahan terhadap malware dibandingkan sistem operasi lain.</li><li><strong>Fleksibel:</strong> Bisa diubahsuai dari sistem desktop yang cantik hingga menjadi server ringan tanpa antarmuka grafis.</li></ul><h2>Perintah Dasar Terminal yang Wajib Diketahui</h2><p>Terminal adalah antarmuka teks untuk berinteraksi dengan sistem. Berikut adalah beberapa perintah esensial:</p><ul><li><code>ls</code>: (List) Menampilkan isi dari direktori saat ini.<pre><code>ls -la  # Menampilkan daftar dengan format panjang, termasuk file tersembunyi</code></pre></li><li><code>cd</code>: (Change Directory) Pindah ke direktori lain.<pre><code>cd /home/user/Documents  # Pindah ke direktori Documents\ncd ..                    # Pindah satu tingkat ke atas\ncd ~                     # Pindah ke direktori home</code></pre></li><li><code>pwd</code>: (Print Working Directory) Menampilkan direktori tempat Anda berada saat ini.</li><li><code>mkdir</code>: (Make Directory) Membuat direktori baru.<pre><code>mkdir ProyekTKJ</code></pre></li><li><code>touch</code>: Membuat file kosong baru.<pre><code>touch catatan.txt</code></pre></li><li><code>rm</code>: (Remove) Menghapus file atau direktori.<pre><code>rm catatan.txt     # Menghapus file\nrm -r ProyekTKJ  # Menghapus direktori dan isinya (hati-hati!)</code></pre></li><li><code>cp</code>: (Copy) Menyalin file atau direktori.<pre><code>cp file_asli.txt file_salinan.txt</code></pre></li><li><code>mv</code>: (Move) Memindahkan atau mengubah nama file/direktori.<pre><code>mv file_lama.txt nama_baru.txt  # Mengubah nama\nmv file.txt /lokasi/baru/     # Memindahkan</code></pre></li><li><code>sudo</code>: (Superuser Do) Menjalankan perintah dengan hak akses tertinggi (root). Diperlukan untuk instalasi software atau mengubah konfigurasi sistem.<pre><code>sudo apt update</code></pre></li><li><code>apt</code>: (Advanced Package Tool) Manajer paket pada distribusi berbasis Debian/Ubuntu untuk menginstal, memperbarui, dan menghapus software.<pre><code>sudo apt install nginx     # Menginstal Nginx\nsudo apt remove nginx      # Menghapus Nginx</code></pre></li></ul>",
        "references": [
            { "name": "Ubuntu - The Linux command line for beginners", "url": "https://ubuntu.com/tutorials/command-line-for-beginners" },
            { "name": "DigitalOcean - An Introduction to Linux Basics", "url": "https://www.digitalocean.com/community/tutorials/an-introduction-to-linux-basics" }
        ]
    },
    {
        "id": 14,
        "title": "Konfigurasi Dasar Router Mikrotik",
        "desc": "Panduan langkah demi langkah untuk konfigurasi awal router Mikrotik agar bisa terhubung ke internet.",
        "kategori": "jaringan",
        "tahun": 2025,
        "image": "https://images.pexels.com/photos/1181345/pexels-photo-1181345.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
        "content": "<p>Ini adalah panduan praktis untuk melakukan konfigurasi paling dasar pada router Mikrotik agar dapat berfungsi sebagai gateway internet untuk jaringan lokal (LAN).</p><blockquote>Skenario: Internet dari ISP masuk ke port <strong>ether1</strong>. Jaringan lokal (komputer, laptop) akan terhubung ke port <strong>ether2</strong>.</blockquote><p>Kita akan menggunakan WinBox untuk konfigurasi ini.</p><h2>Langkah 1: Reset Konfigurasi</h2><p>Untuk memulai dari awal, selalu reset router terlebih dahulu. Masuk ke <strong>System -> Reset Configuration</strong>, centang \"No Default Configuration\", dan klik Reset.</p><h2>Langkah 2: Konfigurasi Antarmuka (Interfaces)</h2><p>Beri nama pada interface agar mudah dikenali.</p><ol><li>Buka menu <strong>Interfaces</strong>.</li><li>Klik dua kali pada <code>ether1</code>, ganti namanya menjadi <code>ether1-WAN</code>.</li><li>Klik dua kali pada <code>ether2</code>, ganti namanya menjadi <code>ether2-LAN</code>.</li></ol><h2>Langkah 3: Atur Klien DHCP untuk WAN</h2><p>Langkah ini membuat router meminta alamat IP secara otomatis dari ISP.</p><ol><li>Buka <strong>IP -> DHCP Client</strong>.</li><li>Klik tombol 'Add' (+).</li><li>Pada bagian Interface, pilih <code>ether1-WAN</code>.</li><li>Pastikan \"Use Peer DNS\" dan \"Use Peer NTP\" dicentang. Klik OK.</li><li>Tunggu beberapa saat, statusnya akan menjadi \"bound\" dan router Anda akan mendapatkan alamat IP dari ISP.</li></ol><h2>Langkah 4: Atur Alamat IP untuk LAN</h2><p>Kita akan memberikan alamat IP statik untuk jaringan lokal kita.</p><ol><li>Buka <strong>IP -> Addresses</strong>.</li><li>Klik tombol 'Add' (+).</li><li>Isi Address dengan <code>192.168.88.1/24</code>.</li><li>Pada bagian Interface, pilih <code>ether2-LAN</code>. Klik OK.</li></ol><h2>Langkah 5: Atur Server DHCP untuk LAN</h2><p>Agar klien di jaringan lokal mendapatkan IP secara otomatis dari router.</p><ol><li>Buka <strong>IP -> DHCP Server</strong>.</li><li>Klik tombol \"DHCP Setup\".</li><li>Pilih <code>ether2-LAN</code> sebagai DHCP Server Interface. Klik Next.</li><li>DHCP Address Space akan terisi otomatis (<code>192.168.88.0/24</code>). Klik Next.</li><li>Gateway for DHCP Network juga terisi otomatis (<code>192.168.88.1</code>). Klik Next.</li><li>Address to Give Out (range IP untuk klien) juga terisi. Klik Next.</li><li>Untuk DNS Servers, Anda bisa mengisi dengan <code>8.8.8.8</code> dan <code>8.8.4.4</code>. Klik Next.</li><li>Lease Time biarkan default. Klik Next. Selesai.</li></ol><h2>Langkah 6: Konfigurasi Firewall NAT</h2><p>Ini adalah langkah krusial agar klien di jaringan lokal bisa mengakses internet. NAT (Network Address Translation) akan \"menerjemahkan\" alamat IP privat dari LAN ke alamat IP publik yang didapat dari ISP.</p><ol><li>Buka <strong>IP -> Firewall</strong>.</li><li>Pindah ke tab <strong>NAT</strong>.</li><li>Klik tombol 'Add' (+).</li><li>Di tab <strong>General</strong>, pastikan Chain adalah <code>srcnat</code>.</li><li>Pada Out. Interface, pilih <code>ether1-WAN</code>.</li><li>Pindah ke tab <strong>Action</strong>.</li><li>Pilih Action: <code>masquerade</code>. Klik OK.</li></ol><p>Sekarang, hubungkan komputer Anda ke port ether2. Seharusnya komputer Anda sudah mendapatkan IP (misal 192.168.88.254) dan bisa terhubung ke internet.</p>",
        "references": [
            { "name": "MikroTik Wiki - Simple Home Router", "url": "https://wiki.mikrotik.com/Manual:Making_a_simple_wireless_AP" }
        ]
    },
    {
        "id": 15,
        "title": "DNS Server (Domain Name System)",
        "desc": "Memahami cara kerja DNS dan jenis-jenis record yang paling umum digunakan di internet.",
        "kategori": "jaringan",
        "tahun": 2026,
        "image": "https://images.pexels.com/photos/546819/pexels-photo-546819.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
        "content": "<p>Domain Name System (DNS) sering diibaratkan sebagai \"buku telepon internet\". Fungsinya adalah menerjemahkan nama domain yang mudah diingat manusia (seperti <code>www.google.com</code>) menjadi alamat IP yang dimengerti oleh komputer (seperti <code>142.250.191.228</code>).</p><h2>Bagaimana Proses Query DNS Bekerja?</h2><p>Ketika Anda mengetik nama domain di browser, proses berikut terjadi di belakang layar:</p><ol><li>Komputer Anda memeriksa cache lokalnya sendiri untuk melihat apakah sudah tahu alamat IP domain tersebut.</li><li>Jika tidak ada, komputer Anda bertanya ke <strong>DNS Resolver</strong> (biasanya disediakan oleh ISP Anda atau layanan publik seperti 8.8.8.8 dari Google).</li><li>DNS Resolver kemudian memulai pencarian dengan bertanya ke <strong>Root Server</strong>. Root server tidak tahu jawabannya, tapi ia memberitahu alamat <strong>Top-Level Domain (TLD) Server</strong> untuk domain <code>.com</code>.</li><li>Resolver bertanya ke TLD server. TLD server juga tidak tahu jawaban lengkapnya, tapi ia menunjuk ke <strong>Authoritative Name Server</strong> yang bertanggung jawab untuk domain <code>google.com</code>.</li><li>Akhirnya, Resolver bertanya ke Authoritative Name Server. Server inilah yang memegang informasi sebenarnya dan memberikan alamat IP untuk <code>www.google.com</code> kembali ke Resolver.</li><li>Resolver memberikan alamat IP tersebut ke komputer Anda dan menyimpannya di cache untuk sementara waktu.</li><li>Browser Anda menggunakan alamat IP tersebut untuk terhubung ke server Google.</li></ol><h2>Jenis-Jenis DNS Record yang Umum</h2><p>Authoritative Name Server menyimpan informasi dalam bentuk \"record\". Beberapa yang paling penting adalah:</p><ul><li><strong>A Record (Address):</strong> Record paling dasar. Memetakan nama domain ke alamat IPv4.<br>Contoh: <code>website.com -> 192.0.2.1</code></li><li><strong>AAAA Record (Quad A):</strong> Sama seperti A Record, tetapi untuk alamat IPv6.<br>Contoh: <code>website.com -> 2001:0db8:85a3:0000:0000:8a2e:0370:7334</code></li><li><strong>CNAME Record (Canonical Name):</strong> Membuat alias dari satu nama domain ke nama domain lain.<br>Contoh: <code>www.website.com -> website.com</code>. Ini berguna jika alamat IP website.com berubah, Anda hanya perlu mengubah A Record-nya saja.</li><li><strong>MX Record (Mail Exchange):</strong> Menentukan server email mana yang bertanggung jawab untuk menerima email untuk sebuah domain.<br>Contoh: <code>website.com -> mail.server.com</code></li><li><strong>NS Record (Name Server):</strong> Menentukan server mana yang merupakan Authoritative Name Server untuk sebuah domain.</li><li><strong>TXT Record (Text):</strong> Memungkinkan administrator untuk memasukkan teks bebas. Sering digunakan untuk verifikasi domain atau kebijakan keamanan email seperti SPF dan DKIM.</li></ul>",
        "references": [
            { "name": "Cloudflare - What is DNS?", "url": "https://www.cloudflare.com/learning/dns/what-is-dns/" },
            { "name": "Wikipedia - List of DNS record types", "url": "https://en.wikipedia.org/wiki/List_of_DNS_record_types" }
        ]
    },
    {
        "id": 16,
        "title": "Proxy Server",
        "desc": "Mengenal fungsi, jenis (Forward & Reverse), dan kegunaan proxy server dalam jaringan.",
        "kategori": "keamanan",
        "tahun": 2026,
        "image": "https://images.pexels.com/photos/270632/pexels-photo-270632.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
        "content": "<p>Proxy server bertindak sebagai perantara (intermediary) untuk permintaan dari klien yang mencari sumber daya dari server lain. Secara sederhana, proxy adalah gerbang antara pengguna dan internet.</p><h2>1. Forward Proxy</h2><p>Ini adalah jenis proxy yang paling umum dipahami. Forward proxy berada di sisi klien (jaringan lokal) dan bertindak atas nama klien saat meminta sumber daya dari internet.</p><blockquote>Klien -> <strong>Forward Proxy</strong> -> Internet</blockquote><p>Server tujuan (misalnya, server website) hanya melihat permintaan datang dari alamat IP proxy, bukan dari alamat IP klien asli. Ini menyembunyikan identitas klien.</p><h3>Kegunaan Forward Proxy:</h3><ul><li><strong>Filtering Konten:</strong> Sekolah atau perusahaan menggunakannya untuk memblokir akses ke situs-situs tertentu (misalnya, media sosial).</li><li><strong>Caching:</strong> Menyimpan salinan situs web yang sering diakses. Jika klien lain meminta situs yang sama, proxy bisa langsung memberikannya dari cache tanpa perlu mengambil dari internet, sehingga menghemat bandwidth.</li><li><strong>Melewati Pembatasan Geografis:</strong> Menggunakan proxy di negara lain untuk mengakses konten yang hanya tersedia di negara tersebut.</li></ul><p>Contoh software: Squid</p><h2>2. Reverse Proxy</h2><p>Reverse proxy berada di sisi server dan bertindak atas nama server. Ia menerima semua permintaan dari internet dan meneruskannya ke satu atau lebih server di jaringan internal.</p><blockquote>Internet -> <strong>Reverse Proxy</strong> -> Server-server Internal</blockquote><p>Klien dari internet tidak tahu dan tidak peduli server mana yang sebenarnya melayani permintaan mereka. Mereka hanya berkomunikasi dengan reverse proxy.</p><h3>Kegunaan Reverse Proxy:</h3><ul><li><strong>Load Balancing:</strong> Mendistribusikan permintaan yang masuk secara merata ke beberapa server backend. Ini mencegah satu server menjadi kelebihan beban dan meningkatkan ketersediaan layanan.</li><li><strong>Keamanan:</strong> Menyembunyikan arsitektur dan alamat IP server internal dari publik, mempersulit serangan langsung.</li><li><strong>SSL Termination:</strong> Menangani proses enkripsi/dekripsi SSL/TLS. Server backend tidak perlu dibebani dengan tugas ini dan bisa fokus melayani konten.</li><li><strong>Caching Konten Statis:</strong> Sama seperti forward proxy, ia bisa menyimpan cache dari konten yang sering diminta untuk mempercepat respons.</li></ul><p>Contoh software: Nginx, Apache (dengan mod_proxy), HAProxy.</p>",
        "references": [
            { "name": "Nginx - What Is a Reverse Proxy?", "url": "https://www.nginx.com/resources/glossary/reverse-proxy-server/" },
            { "name": "Webopedia - What is a Proxy Server?", "url": "https://www.webopedia.com/definitions/proxy-server/" }
        ]
    },
    {
        "id": 17,
        "title": "Sistem Operasi Jaringan (NOS)",
        "desc": "Memahami peran NOS dan perbandingan antara platform populer seperti Windows Server dan Linux Server.",
        "kategori": "software",
        "tahun": 2025,
        "image": "https://images.pexels.com/photos/943096/pexels-photo-943096.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
        "content": "<p>Sistem Operasi Jaringan atau Network Operating System (NOS) adalah sistem operasi yang dirancang khusus untuk mendukung komputer yang terhubung dalam sebuah jaringan. Tugas utamanya adalah menyediakan dan mengelola layanan-layanan jaringan.</p><h2>Fungsi Utama NOS:</h2><ul><li><strong>Manajemen Pengguna:</strong> Membuat, menghapus, dan mengatur hak akses pengguna dalam jaringan.</li><li><strong>Berbagi Sumber Daya:</strong> Mengizinkan berbagi file (file sharing) dan printer (printer sharing) antar pengguna.</li><li><strong>Menyediakan Layanan Jaringan:</strong> Menjalankan layanan penting seperti DHCP Server, DNS Server, Web Server, dan Directory Service (seperti Active Directory).</li><li><strong>Keamanan:</strong> Mengontrol akses ke sumber daya jaringan dan menerapkan kebijakan keamanan.</li></ul><h2>Platform NOS Populer</h2><h3>1. Windows Server</h3><p>NOS komersial dari Microsoft yang sangat populer di lingkungan perusahaan. Keunggulan utamanya adalah integrasi yang erat dengan produk Microsoft lainnya dan antarmuka grafis (GUI) yang familiar bagi pengguna Windows.</p><ul><li><strong>Fitur Unggulan:</strong> Active Directory (layanan direktori dan manajemen identitas yang sangat kuat), Hyper-V (platform virtualisasi), kemudahan administrasi melalui GUI.</li><li><strong>Kelemahan:</strong> Memerlukan lisensi yang mahal, cenderung membutuhkan sumber daya hardware yang lebih besar.</li></ul><h3>2. Linux Server (Ubuntu Server, CentOS, Debian)</h3><p>Varian Linux yang dioptimalkan untuk berjalan sebagai server. Karena sifatnya yang open-source, Linux sangat dominan di lingkungan web hosting dan cloud computing.</p><ul><li><strong>Fitur Unggulan:</strong> Gratis, sangat stabil, efisien dalam penggunaan sumber daya, tingkat keamanan tinggi, dan fleksibilitas konfigurasi melalui command line.</li><li><strong>Kelemahan:</strong> Kurva belajar yang lebih curam bagi pemula karena sangat bergantung pada command line, dukungan komersial yang bervariasi.</li></ul><h3>3. Mikrotik RouterOS</h3><p>Meskipun lebih dikenal sebagai sistem operasi untuk router, RouterOS juga merupakan sebuah NOS yang sangat handal dan ringan. Ia bisa menjalankan berbagai layanan jaringan pada perangkat keras yang tidak terlalu kuat.</p><ul><li><strong>Fitur Unggulan:</strong> Sangat ringan, kaya fitur jaringan (routing, firewall, hotspot, VPN), harga terjangkau.</li><li><strong>Kelemahan:</strong> Kurang ideal untuk menjalankan aplikasi-aplikasi server yang kompleks (seperti database besar) dibandingkan Windows/Linux Server.</li></ul><h2>Kapan Menggunakannya?</h2><ul><li>Gunakan <strong>Windows Server</strong> jika lingkungan Anda sangat bergantung pada ekosistem Microsoft dan membutuhkan manajemen identitas terpusat yang kuat melalui Active Directory.</li><li>Gunakan <strong>Linux Server</strong> untuk hampir semua kebutuhan server lainnya, terutama web server, database, atau jika Anda menginginkan solusi yang hemat biaya dan sangat fleksibel.</li><li>Gunakan <strong>RouterOS</strong> ketika fokus utama Anda adalah fungsi jaringan (routing, firewall, manajemen bandwidth) pada perangkat keras yang efisien.</li></ul>",
        "references": [
            { "name": "TechTarget - Network Operating System (NOS)", "url": "https://www.techtarget.com/searchnetworking/definition/network-operating-system" },
            { "name": "Wikipedia - Network operating system", "url": "https://en.wikipedia.org/wiki/Network_operating_system" }
        ]
    },
    {
        "id": 18,
        "title": "Cloud Computing Dasar",
        "desc": "Mengenal model layanan IaaS, PaaS, SaaS, dan model deployment Public, Private, Hybrid Cloud.",
        "kategori": "software",
        "tahun": 2026,
        "image": "https://images.pexels.com/photos/1181354/pexels-photo-1181354.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
        "content": "<p>Cloud Computing adalah model penyampaian layanan komputasi—termasuk server, penyimpanan, database, jaringan, perangkat lunak—melalui Internet (\"the cloud\"). Daripada memiliki infrastruktur komputasi sendiri, Anda bisa menyewanya dari penyedia cloud.</p><h2>Tiga Model Layanan Utama (Service Models)</h2><p>Ini adalah cara paling umum untuk mengkategorikan layanan cloud.</p><h3>1. IaaS (Infrastructure as a Service)</h3><p>Ini adalah blok bangunan paling dasar dari cloud. Penyedia cloud menyewakan infrastruktur IT—server virtual (VM), penyimpanan, dan jaringan—kepada Anda. Anda bertanggung jawab untuk mengelola sistem operasi, middleware, dan aplikasi.</p><blockquote><strong>Analogi:</strong> Menyewa sebidang tanah kosong. Anda bebas mau membangun rumah model apa di atasnya, tapi Anda harus membangunnya sendiri dari pondasi hingga atap.</blockquote><p><strong>Contoh:</strong> Amazon Web Services (AWS) EC2, Google Compute Engine (GCE), Microsoft Azure VM.</p><h3>2. PaaS (Platform as a Service)</h3><p>Model ini menyediakan platform yang memungkinkan Anda untuk mengembangkan, menjalankan, dan mengelola aplikasi tanpa perlu pusing memikirkan infrastruktur di baliknya. Penyedia cloud mengelola OS, server, dan jaringan.</p><blockquote><strong>Analogi:</strong> Menyewa sebuah apartemen. Pondasi, listrik, dan air sudah tersedia. Anda hanya perlu menata perabotan (kode aplikasi Anda) di dalamnya.</blockquote><p><strong>Contoh:</strong> Heroku, Google App Engine, AWS Elastic Beanstalk.</p><h3>3. SaaS (Software as a Service)</h3><p>Ini adalah layanan cloud yang paling sering kita gunakan. Perangkat lunak disediakan melalui internet, biasanya berbasis langganan. Anda hanya perlu mengaksesnya melalui browser, tanpa perlu instalasi atau manajemen apapun.</p><blockquote><strong>Analogi:</strong> Menginap di hotel. Semuanya sudah siap pakai, mulai dari tempat tidur hingga makanan. Anda tinggal menikmati layanannya.</blockquote><p><strong>Contoh:</strong> Google Workspace (Gmail, Docs), Microsoft 365, Dropbox, Netflix.</p><h2>Model Deployment</h2><ul><li><strong>Public Cloud:</strong> Infrastruktur dimiliki dan dioperasikan oleh penyedia cloud pihak ketiga (seperti AWS, Google, Microsoft) dan layanannya diakses melalui internet.</li><li><strong>Private Cloud:</strong> Infrastruktur komputasi digunakan secara eksklusif oleh satu organisasi. Bisa berlokasi di data center internal atau disewakan dari pihak ketiga.</li><li><strong>Hybrid Cloud:</strong> Kombinasi dari public dan private cloud, dihubungkan oleh teknologi yang memungkinkan data dan aplikasi untuk berpindah antar keduanya.</li></ul>",
        "references": [
            { "name": "Amazon Web Services - What is Cloud Computing?", "url": "https://aws.amazon.com/what-is-cloud-computing/" },
            { "name": "Microsoft Azure - What is IaaS?", "url": "https://azure.microsoft.com/en-us/resources/cloud-computing-dictionary/what-is-iaas" }
        ]
    },
    {
        "id": 19,
        "title": "Monitoring Jaringan",
        "desc": "Pentingnya pemantauan jaringan dan pengenalan tools seperti PRTG, Zabbix, dan The Dude.",
        "kategori": "jaringan",
        "tahun": 2026,
        "image": "https://images.pexels.com/photos/3861964/pexels-photo-3861964.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
        "content": "<p>Monitoring Jaringan adalah proses berkelanjutan untuk memantau kesehatan dan kinerja komponen-komponen jaringan seperti router, switch, server, dan koneksi. Tujuannya adalah untuk mendeteksi masalah lebih awal, seringkali sebelum pengguna menyadarinya.</p><h2>Mengapa Monitoring Penting?</h2><ul><li><strong>Deteksi Masalah Proaktif:</strong> Memberi tahu Anda jika ada perangkat yang mati, koneksi yang lambat, atau penggunaan bandwidth yang tidak wajar.</li><li><strong>Perencanaan Kapasitas:</strong> Membantu Anda melihat tren penggunaan sumber daya (seperti CPU router atau traffic internet) sehingga Anda bisa merencanakan upgrade sebelum terjadi masalah.</li><li><strong>Analisis Kinerja:</strong> Menyediakan data historis untuk menganalisis penyebab masalah kinerja jaringan.</li><li><strong>Keamanan:</strong> Membantu mendeteksi aktivitas mencurigakan, seperti lonjakan traffic yang tidak biasa yang bisa menjadi indikasi serangan DDoS.</li></ul><h2>Apa yang Dimonitor?</h2><p>Beberapa metrik kunci yang biasanya dipantau:</p><ul><li><strong>Ketersediaan (Availability):</strong> Apakah perangkat atau layanan online atau offline? Biasanya dilakukan dengan perintah <code>ping</code>.</li><li><strong>Latency (Latensi):</strong> Waktu yang dibutuhkan paket untuk pergi ke tujuan dan kembali (Round Trip Time). Latensi tinggi menyebabkan jaringan terasa lambat.</li><li><strong>Bandwidth Utilization:</strong> Seberapa banyak kapasitas koneksi internet atau link antar perangkat yang sedang digunakan.</li><li><strong>CPU & Memory Usage:</strong> Penggunaan CPU dan RAM pada router, switch, dan server. Jika terlalu tinggi, kinerja perangkat akan menurun.</li><li><strong>Status Port:</strong> Apakah port pada switch aktif atau tidak, dan berapa banyak traffic yang melaluinya.</li></ul><h2>Tools Monitoring Populer</h2><p>Ada banyak sekali tools monitoring, dari yang sederhana hingga sangat kompleks.</p><h3>1. Zabbix</h3><p>Solusi monitoring open-source yang sangat kuat dan fleksibel. Bisa memantau hampir semua hal, dari server Linux/Windows hingga perangkat jaringan Cisco/Mikrotik. Memiliki kurva belajar yang cukup curam tapi sangat bisa diandalkan.</p><h3>2. PRTG Network Monitor</h3><p>Solusi komersial yang sangat populer karena kemudahan penggunaan dan setup-nya. Memiliki antarmuka web yang modern dan bisa memantau ribuan \"sensor\". Versi gratisnya tersedia dengan batasan 100 sensor, cukup untuk jaringan kecil.</p><h3>3. The Dude</h3><p>Tool monitoring gratis dari Mikrotik. Sangat baik untuk memetakan topologi jaringan Anda secara otomatis dan memantau perangkat Mikrotik serta perangkat lain melalui protokol SNMP atau ping. Sederhana namun efektif untuk jaringan skala kecil hingga menengah.</p>",
        "references": [
            { "name": "Zabbix Official Website", "url": "https://www.zabbix.com/" },
            { "name": "PRTG Official Website", "url": "https://www.paessler.com/prtg" },
            { "name": "MikroTik Wiki - The Dude", "url": "https://wiki.mikrotik.com/Manual:The_Dude" }
        ]
    },
    {
        "id": 20,
        "title": "Python untuk Otomatisasi Jaringan",
        "desc": "Pengenalan penggunaan Python dan library seperti Paramiko untuk otomatisasi tugas-tugas jaringan.",
        "kategori": "pemrograman",
        "tahun": 2026,
        "image": "https://images.pexels.com/photos/1181373/pexels-photo-1181373.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
        "content": "<p>Otomatisasi jaringan adalah penggunaan skrip untuk mengkonfigurasi, mengelola, menguji, dan mengoperasikan perangkat jaringan secara otomatis. Python telah menjadi bahasa de-facto untuk tugas ini karena sintaksisnya yang sederhana dan ekosistem library yang kaya.</p><h2>Mengapa Otomatisasi Jaringan Penting?</h2><ul><li><strong>Mengurangi Kesalahan Manusia:</strong> Konfigurasi manual pada puluhan perangkat sangat rentan terhadap salah ketik (typo). Skrip memastikan konsistensi.</li><li><strong>Efisiensi Waktu:</strong> Tugas yang memakan waktu berjam-jam secara manual (seperti mengubah password di 50 router) dapat diselesaikan dalam hitungan menit oleh skrip.</li><li><strong>Skalabilitas:</strong> Mudah untuk mengelola jaringan yang terus berkembang dari 10 perangkat menjadi 1000 perangkat.</li><li><strong>Pengumpulan Data:</strong> Mengambil data (seperti versi software, status interface, tabel routing) dari ratusan perangkat secara otomatis untuk analisis.</li></ul><h2>Library Python yang Populer</h2><p>Anda tidak perlu memulai dari nol. Banyak library hebat yang bisa membantu:</p><ul><li><strong>Paramiko:</strong> Library tingkat rendah untuk membuat koneksi SSH. Ini adalah dasar dari banyak library lain.</li><li><strong>Netmiko:</strong> Dibangun di atas Paramiko, Netmiko menyederhanakan interaksi dengan berbagai jenis perangkat jaringan (Cisco, Mikrotik, Juniper, dll). Ia tahu cara masuk ke mode enable, mengirim perintah, dan menangani output dari masing-masing vendor.</li><li><strong>Nornir:</strong> Framework otomatisasi yang memungkinkan Anda menjalankan tugas pada banyak perangkat secara bersamaan (concurrently).</li></ul><h2>Contoh Sederhana dengan Netmiko</h2><p>Berikut adalah contoh skrip Python untuk terhubung ke sebuah router Cisco dan mengambil versi software-nya.</p><p>Pertama, Anda perlu menginstal Netmiko:</p><pre><code>pip install netmiko</code></pre><p>Kemudian, buat file Python (misal, <code>get_version.py</code>):</p><pre><code>from netmiko import ConnectHandler\n\n# Informasi perangkat\ncisco_router = {\n    'device_type': 'cisco_ios',\n    'host': '192.168.1.1',\n    'username': 'admin',\n    'password': 'your_password',\n}\n\ntry:\n    # Memulai koneksi SSH\n    net_connect = ConnectHandler(**cisco_router)\n\n    # Mengirim perintah\n    output = net_connect.send_command('show version')\n\n    # Menutup koneksi\n    net_connect.disconnect()\n\n    # Mencetak hasil\n    print(output)\n\nexcept Exception as e:\n    print(f\"Gagal terhubung: {e}\")</code></pre><p>Dengan memodifikasi skrip ini, Anda bisa mengambil informasi apapun dari perangkat, atau bahkan mengirim perintah konfigurasi. Ini adalah langkah pertama menuju dunia otomatisasi jaringan yang sangat luas.</p>",
        "references": [
            { "name": "Netmiko on GitHub", "url": "https://github.com/ktbyers/netmiko" },
            { "name": "Nokia - Network-Automation with Python", "url": "https://www.nokia.com/autonomous-networks/?did=D00000011780&gad_source=1&gad_campaignid=22680393060&gbraid=0AAAAABVOzEtDqFAsxfKuTNGckOkgLO5Jm&gclid=CjwKCAjw7rbEBhB5EiwA1V49nez-YIL6eZenmrCwV9tTkfCGaHgebHX2c7VgXGg0TymOF52A8O_28RoCU0EQAvD_BwE&utm_campaign=AN_Thought_Leader&utm_source=google&utm_medium=cpc&utm_content=autonomous-networks-website&utm_term=autonomous-networks-website-paid-search" }
        ]
    }
]
